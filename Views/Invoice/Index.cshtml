@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
<header>
    <link rel="stylesheet" href="~/css/Icon.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">

</header>

<div class="col-md-12 ">
   @*  <div class="card shadow mb-4">
        <div class="card-header bg-info text-white text-center">
            <h4 class="mb-0">Invoice</h4>
        </div>
    </div> *@
    <form>
        <div class="row">
            <div class="col-md-7  ps-4">
                <div class="card">
                    <div class="card-header bg-info">
                        <h6 class="mb-0  text-white">Customer Details</h6>
                    </div>
                    <div class="card-body">
                        <input type="hidden" class="form-control" id="Id">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Name">Name</label>
                                    <input type="hidden" id="CustomerId">
                                    <input type="text" class="form-control" id="Name" placeholder="Enter Customer Name" autocomplete="off">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Phone">Phone</label>
                                    <input type="tel" class="form-control" id="Phone" autocomplete="off" placeholder="Enter Phone Number">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Address">Address</label>
                            <input type="text" class="form-control" id="Address" placeholder="Enter Address">
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-5 pe-4">
                <div class="card">
                    <div class="card-header bg-info">
                        <h6 class="mb-0 text-white">Invoice Details</h6>
                    </div>
                    <div class="card-body"> 
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                    <label for="Invoice_ID">Invoice ID</label>
                                    <input type="number" class="form-control" id="Invoice_ID" value="@DateTime.Now.ToString("yyyyMMddHHmmss")" placeholder="Enter Invoice ID" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="PrintedBy">Printed By</label>
                                    <input type="text" class="form-control" id="PrintedBy" placeholder="Enter Printer's Name" value="@UserManager.GetUserName(User)" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Date">Date</label>
                            <input type="date" class="form-control" id="Date" value="@DateTime.Today.ToString("yyyy-MM-dd")">

                    </div>
                </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-12 px-4">
                <div class="card">
                    <div class="card-header bg-info d-flex align-items-center">
                        <h6 class="mb-0 text-white">Invoice Items</h6>
                        <div class="ms-auto">
                            <button type="button" class="btn btn-danger btn-sm px-3" onclick="addItem()">Add Item</button>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-md-8">
                                <label>Product Description</label>
                                <input name="Description" class="form-control" placeholder="Add Product Description" />
                            </div>
                            <div class="col-md-1">
                                <label>Quantity</label>
                                <input name="Quantity" type="number" class="form-control " placeholder="0" />
                            </div>
                            <div class="col-md-1">
                                <label>Unit Price</label>
                                <input name="UnitPrice" type="number" class="form-control" placeholder="0.00" />
                            </div>
                            <div class="col-md-1">
                                <label>Discount %</label>
                                <input name="Discount" type="number" class="form-control" placeholder="0.00" />
                            </div>
                            <div class="col-md-1">
                                <label>Total Price</label>
                                <input name="TotalPrice" type="number" class="form-control" placeholder="0.00" readonly />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </form>
    <div class="row mt-4">
        <div class="col-12 px-4">
            <div class="row">
                <div class="col-md-8">
                    <div class="card shadow mb-4">
                        <div class="card-header bg-info">
                            <h6 class="mb-0  text-white">Order List</h6>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover">
                                    <thead class="bg-light">
                                        <tr>
                                            <th scope="col">Product Description</th>
                                            <th scope="col">Quantity</th>
                                            <th scope="col">Discount</th>
                                            <th scope="col">Total</th>
                                            <th scope="col">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="items-container">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card shadow mb-4">
                        <div class="card-header bg-info">
                            <h6 class="mb-0  text-white">Order Summary</h6>
                        </div>
                        <div class="card-body">
                            <div class="form-group mb-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <label for="subtotal" class="mb-0">Subtotal:</label>
                                    <input type="text" id="subtotal" class="form-control text-end" placeholder="0.00" readonly style="max-width: 120px;">
                                </div>
                            </div>
                            <div class="form-group mb-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <label for="totalDiscount" class="mb-0">Total Discount:</label>
                                    <input type="text" id="totalDiscount" class="form-control text-end" placeholder="0.00" readonly style="max-width: 120px;">
                                </div>
                            </div>
                            <hr>
                            <div class="form-group mb-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <label for="ManualDiscount" class="mb-0">Discount:</label>
                                    <input type="text" name="ManualDiscount" id="ManualDiscount" class="form-control text-end" placeholder="0.00" style="max-width: 120px;">
                                </div>
                            </div>
                            <hr />
                            <div class="form-group mb-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <label for="grandTotal" class="fw-bold mb-0">Grand Total:</label>
                                    <input type="text" id="grandTotal" class="form-control text-end fw-bold" placeholder="0.00" readonly style="max-width: 120px;">
                                </div>
                            </div>
                            <div class="mt-3 d-flex justify-content-center">
                                <button type="button" id="SaveButton" class="btn btn-success me-2 flex-grow-1">
                                    Save
                                </button>
                                <button type="button" id="PrintButton" class="btn btn-success flex-grow-1">
                                    Print
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script src="~/js/jquery-3.6.0.min.js"></script>
    <script src="~/js/alert.js"></script>
    <script>
        // Initialize arrays and variables
        let items = [];
        
        function addItem() {
            // Get values from input fields
            const description = document.querySelector('input[name="Description"]').value;
            const quantity = parseFloat(document.querySelector('input[name="Quantity"]').value);
            const unitPrice = parseFloat(document.querySelector('input[name="UnitPrice"]').value);
            const discount = parseFloat(document.querySelector('input[name="Discount"]').value) || 0;

            // Validate inputs
            if (!description || !quantity || !unitPrice) {
                alert('Please fill in all required fields');
                return;
            }

            // Calculate total price for this item
            const subtotal = quantity * unitPrice;
            const discountAmount = (subtotal * discount) / 100;
            const totalPrice = subtotal - discountAmount;

            // Create new item object
            const newItem = {
                description,
                quantity,
                unitPrice,
                discount,
                subtotal,
                discountAmount,
                totalPrice
            };

            // Add to items array
            items.push(newItem);
            console.log(newItem);

            // Update the table
            updateTable();

            // Clear input fields
            clearInputFields();

            // Update totals
            updateOrderSummary();
        }

        function updateTable() {
            const tableBody = document.getElementById('items-container');
            tableBody.innerHTML = ''; // Clear existing rows

            items.forEach((item, index) => {
                const row = `
                                <tr>
                                    <td>${item.description}</td>
                                    <td>${item.quantity}</td>
                                    <td>${item.discount}%</td>
                                    <td>${item.totalPrice.toFixed(2)}</td>
                                    <td>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="removeItem(${index})">
                                            <i class="bi bi-trash"></i> Remove
                                        </button>
                                    </td>
                                </tr>
                            `;
                tableBody.insertAdjacentHTML('beforeend', row);
            });
        }

        function removeItem(index) {
            items.splice(index, 1); // Remove item from array
            updateTable(); // Refresh the table
            updateOrderSummary(); // Update totals
        }

        function clearInputFields() {
            document.querySelector('input[name="Description"]').value = '';
            document.querySelector('input[name="Quantity"]').value = '';
            document.querySelector('input[name="UnitPrice"]').value = '';
            document.querySelector('input[name="Discount"]').value = '';
            document.querySelector('input[name="TotalPrice"]').value = '';
        }

        function updateOrderSummary() {
            // Calculate subtotal
            const subtotal = items.reduce((sum, item) => sum + item.subtotal, 0);

            // Calculate total item discounts
            const itemDiscounts = items.reduce((sum, item) => sum + item.discountAmount, 0);

            // Get manual discount
            const manualDiscount = parseFloat(document.getElementById('ManualDiscount').value) || 0;

            // Calculate grand total
            const grandTotal = subtotal - itemDiscounts - manualDiscount;

            // Update display fields
            document.getElementById('subtotal').value = subtotal.toFixed(2);
            document.getElementById('totalDiscount').value = itemDiscounts.toFixed(2);
            document.getElementById('grandTotal').value = Math.max(0, grandTotal).toFixed(2);
        }

        // Add event listeners for real-time total calculation
        document.querySelector('input[name="Quantity"]').addEventListener('input', calculateLineTotal);
        document.querySelector('input[name="UnitPrice"]').addEventListener('input', calculateLineTotal);
        document.querySelector('input[name="Discount"]').addEventListener('input', calculateLineTotal);

        // Add event listener for manual discount
        document.getElementById('ManualDiscount').addEventListener('input', function (e) {
            // Sanitize input to allow only numbers and decimal point
            let value = e.target.value.replace(/[^\d.]/g, '');
            debugger;
            // Ensure only one decimal point
            const parts = value.split('.');
            if (parts.length > 2) value = parts[0] + '.' + parts.slice(1).join('');

            // Limit to 2 decimal places
            if (parts.length > 1) value = parts[0] + '.' + parts[1].slice(0, 2);

            e.target.value = value;
            updateOrderSummary();
        });

        function calculateLineTotal() {
            const quantity = parseFloat(document.querySelector('input[name="Quantity"]').value) || 0;
            const unitPrice = parseFloat(document.querySelector('input[name="UnitPrice"]').value) || 0;
            const discount = parseFloat(document.querySelector('input[name="Discount"]').value) || 0;

            const subtotal = quantity * unitPrice;
            const discountAmount = (subtotal * discount) / 100;
            const total = subtotal - discountAmount;

            document.querySelector('input[name="TotalPrice"]').value = total.toFixed(2);
        }
    </script>

    <script>
        $(document).ready(function () {

            $("#SaveButton").click(function (event) {
                event.preventDefault();
                console.log(items);
                var invoiceData = {
                    CustomerId: $('#CustomerId').val(),
                    Name: $('#Name').val(),
                    Phone: $('#Phone').val(),
                    Address: $('#Address').val(),
                    Customer_Id: $('#Customer_Id').val(),
                    PrintedBy: $('#PrintedBy').val(),
                    Date: $('#Date').val(),
                    ManualDiscount: $('#ManualDiscount').val(),
                    
                    InvoiceItems: items.map(item => ({
                        Description: item.description,
                        Quantity: item.quantity,
                        ItemDiscount: item.discount,
                        Price: item.unitPrice
                    }))
                };
                console.log(invoiceData);

                $.ajax({
                    url: '@Url.Action("Index", "Invoice")',
                    type: 'POST',
                    data: invoiceData,

                    success: function () {
                        alert("sent to controller");
                    },

                    Error: function () {
                        alert("Failed");
                    }
                });
            });
        });
    </script>
}
